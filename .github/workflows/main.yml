name: Build and Deploy to VDS

on:
  push:
    branches:
      - main  # Adjust the branch name as needed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Log in to DockerHub or private container registry
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 3: Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t ${{ vars.DOCKER_CONTAINER_NAME }}:latest .

    # Step 4: Push Docker image to DockerHub
    - name: Push Docker Image to DockerHub
      run: |
        docker tag ${{ vars.DOCKER_CONTAINER_NAME }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ vars.DOCKER_CONTAINER_NAME }}:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ vars.DOCKER_CONTAINER_NAME }}:latest

    # Step 5: SSH into VDS and deploy
    - name: Deploy to VDS
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.VDS_HOST }}
        username: ${{ secrets.VDS_USER }}
        password: ${{ secrets.VDS_PASSWORD }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ vars.DOCKER_CONTAINER_NAME }}:latest
          docker stop ${{ vars.DOCKER_CONTAINER_NAME }} || true
          docker rm ${{ vars.DOCKER_CONTAINER_NAME }} || true
          docker run -d --name ${{ vars.DOCKER_CONTAINER_NAME }} \
            -e ConnectionStrings__System=${{ secrets.SYSTEM_CONNECTION_STRING }} \
            -e ConnectionStrings__Vector=${{ secrets.VECTOR_CONNECTION_STRING }} \
            -e ApiKeys__GptApiKey=${{ secrets.GPT_API_KEY }} \
            -e ApiKeys__GrokApiKey=${{ secrets.GROK_API_KEY }} \
            -e Settings__EncryptionKey=${{ secrets.ENCRYPTION_KEY }} \
            -p 80:80 ${{ secrets.DOCKER_USERNAME }}/${{ vars.DOCKER_CONTAINER_NAME }}:latest

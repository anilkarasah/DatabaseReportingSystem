// <auto-generated />
using DatabaseReportingSystem.Vector.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pgvector;

#nullable disable

namespace DatabaseReportingSystem.Vector.Migrations
{
    [DbContext(typeof(VectorDbContext))]
    partial class VectorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "vector");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DatabaseReportingSystem.Vector.Models.SpiderEmbedding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DatabaseId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<Pgvector.Vector>("Embedding")
                        .IsRequired()
                        .HasColumnType("vector(1536)");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DatabaseId");

                    b.HasIndex("Embedding")
                        .HasAnnotation("Npgsql:StorageParameter:lists", 7);

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Embedding"), "ivfflat");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex("Embedding"), new[] { "vector_l2_ops" });

                    b.ToTable("Embeddings");
                });

            modelBuilder.Entity("DatabaseReportingSystem.Vector.Models.SpiderSchema", b =>
                {
                    b.Property<string>("DatabaseId")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Schema")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DatabaseId");

                    b.ToTable("Schemas");
                });

            modelBuilder.Entity("DatabaseReportingSystem.Vector.Models.SpiderEmbedding", b =>
                {
                    b.HasOne("DatabaseReportingSystem.Vector.Models.SpiderSchema", "Schema")
                        .WithMany("Embeddings")
                        .HasForeignKey("DatabaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");
                });

            modelBuilder.Entity("DatabaseReportingSystem.Vector.Models.SpiderSchema", b =>
                {
                    b.Navigation("Embeddings");
                });
#pragma warning restore 612, 618
        }
    }
}
